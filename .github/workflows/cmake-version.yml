name: runtime CMake version
on: [push, pull_request]
jobs:
  fetch-cmake-releases:
    runs-on: ubuntu-latest
    outputs:
      lists: ${{steps.generate-list.outputs.lists}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup python
        uses: actions/setup-python@v2
    
      - name: Generate cmake releases list
        id: generate-list
        run: |
          curl \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/kitware/cmake/tags?per_page=100" | grep "name" > /opt/releases.txt
            
          curl \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/kitware/cmake/tags?per_page=100&page=2" | grep "name" >> /opt/releases.txt
          
          cat /opt/releases.txt
       
      - name: Compute maximum minor cmake releases
        id: compute
        run: |
          python ci/output_list.py > /opt/list.txt
                  
      - run:  echo "::set-output name=lists::$(cat /opt/list.txt)"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
  fetch-cmake-latest:
    runs-on: ubuntu-latest
    outputs: 
      latest: ${{steps.latest-version.outputs.latest}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: cmake latest version
        id: latest-version
        run: |
          sudo wget -qO- -t1 -T2 https://api.github.com/repos/kitware/cmake/releases/latest | grep "tag_name" | head -n 1 | awk -F ":" '{print $2}' | sed 's/\"//g;s/v//g;s/,//g;s/ //g' > /opt/latest.txt
          alias latestversion='cat /opt/latest.txt'
          echo "::set-output name=latest::$(echo "\"version\"" = $latestversion)"
          echo "\"version\"" = $latestversion
          
  minimum-runtime-cmake-version:
    runs-on: ubuntu-latest
    needs: 
      - fetch-cmake-releases
      - fetch-cmake-latest
    strategy:
      fail-fast: false
      matrix:
        list: ${{ needs.fetch-cmake-releases.outputs.lists }}
        latestv: ${{ needs.fetch-cmake-latest.outputs.latest }}
      
    env:
      CC: gcc-10
      CXX: g++-10

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check dependencies
        run: |
          cmake --version
          sudo apt-get update
          sudo apt-get install -y curl wget git ninja-build g++-10 libssl-dev libmosquitto-dev

      - name: Install CMake build version cmake >=3.16
        if: ${{matrix.list>='3.16.0'}}
        run: |
          wget https://github.com/Kitware/CMake/releases/download/v${{matrix.list}}/cmake-${{matrix.list}}-Linux-x86_64.sh
          sudo chmod +x cmake-${{matrix.list}}-Linux-x86_64.sh
          sudo bash ./cmake-${{matrix.list}}-Linux-x86_64.sh --skip-license --prefix=/usr/local
          cmake --version
          
      - name: Install CMake build version cmake<3.16
        if: ${{matrix.list<'3.16.0'}}
        run: |
          wget https://github.com/Kitware/CMake/releases/download/v${{matrix.latestv}}/cmake-${{matrix.latestv}}-Linux-x86_64.sh
          sudo chmod +x cmake-${{matrix.latestv}}-Linux-x86_64.sh
          sudo bash ./cmake-${{matrix.latestv}}-Linux-x86_64.sh --skip-license --prefix=/usr/local
          cmake --version

      - name: CMake configuration
        run: |
          cd /home/runner/work/libSMCE/libSMCE
          mkdir build
          cmake \
            -DCMAKE_BUILD_TYPE=Release \
            -DSMCE_CXXRT_LINKING=STATIC \
            -DSMCE_BOOST_LINKING=SOURCE\
            -DSMCE_OPENSSL_LINKING=STATIC \
            -S ./ -B ./build
          ls build/test
            
      - name: CMake build
        run: |
          cmake --build build

      - name: Run libSMCE&SMCE_Tests target
        run: |
          cmake --build build --target SMCE_Tests
      
      - name: Reintsall CMake runtime minimum version
        if: ${{matrix.list<'3.16.0'}}
        run: |
          wget https://github.com/Kitware/CMake/releases/download/v${{matrix.list}}/cmake-${{matrix.list}}-Linux-x86_64.sh
          sudo chmod +x cmake-${{matrix.list}}-Linux-x86_64.sh
          sudo bash ./cmake-${{matrix.list}}-Linux-x86_64.sh --skip-license --prefix=/usr/local
          cmake --version

      - name: Runtime tests
        run: |
          cd /home/runner/work/libSMCE/libSMCE/build/test
          ctest --output-on-error  --output-on-failure
