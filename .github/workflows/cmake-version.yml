name: cmake version check
on: [push, pull_request]
jobs:
    minimum-version-check:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                cmake: [3.16, 3.17, 3.18, 3.19, 3.20, 3.21]
                compiler:
                    - cc: gcc-10
                      cxx: g++-10
                    - cc: clang-10
                      cxx: clang++-10   
                boost:
                    - version: 1.74.0
                      slug: 1_74_0
                      release: false
                    - version: 1.75.0
                      slug: 1_75_0
                      release: false
                    - version: 1.76.0
                      slug: 1_76_0
                      release: true
        
        env:
            cmake: ${{ matrix.cmake }} 
            CC: ${{ matrix.compiler.cc }}
            CXX: ${{ matrix.compiler.cxx }} 
           
        steps:  
            - name: Checkout code
            - uses: actions/checkout@v2
            
            - name: Check deps
              run: |
                  apt-get update
                  apt-get install -y lcov curl wget git cmake ninja-build g++ libboost-all-dev libssl-dev
                  ninja --version
                  cmake --version
              
            - name: CMake configure
              run: |
                  export BOOST_ROOT="$(pwd)/boost_root"
                  mkdir build
                  cmake -G Ninja \
                  -DCMAKE_BUILD_TYPE=Debug \
                  -DSMCE_COVERAGE=On \
                  -DSMCE_BUILD_STATIC=Off \
                  -DSMCE_CXXRT_LINKING=SHARED \
                  -DSMCE_BOOST_LINKING=SHARED \
                  -DSMCE_OPENSSL_LINKING=SHARED \
                  -S ./ -B ./build
           - name: CMake build
              run: cmake --build ./build
              
           - name: Build & Run tests
              run: |
                 cmake --build ./build --target SMCE_Tests
                 (cd build/test/; ctest --output-on-failure)